{"version":3,"sources":["../../src/hooks/useNetlifyAuth.js"],"names":["useNetlifyAuth","React","useState","authResponse","setAuthResponse","useEffect","document","location","hash","response","replace","split","reduce","result","pair","keyValue","window","localStorage","setItem","namespace","JSON","stringify","authToken","getItem","parse","getAuthURL","oauthClientId","href","logout","Promise","resolve","reject","removeItem","Error","getHeaders","headers","Authorization","access_token"],"mappings":";;;;;;;AAAA;;AACA;;;;;;;;;;;;;;;;AAGe,SAASA,cAAT,GAA0B;AACvC,wBAAwCC,eAAMC,QAAN,CAAe,IAAf,CAAxC;AAAA;AAAA,MAAOC,YAAP;AAAA,MAAqBC,eAArB,uBADuC,CAGvC;;;AACAH,iBAAMI,SAAN,CAAgB,MAAM;AACpB,QAAIC,QAAQ,CAACC,QAAT,CAAkBC,IAAtB,EAA4B;AAC1B,UAAMC,QAAQ,GAAGH,QAAQ,CAACC,QAAT,CAAkBC,IAAlB,CACdE,OADc,CACN,IADM,EACA,EADA,EAEdC,KAFc,CAER,GAFQ,EAGdC,MAHc,CAGP,CAACC,MAAD,EAASC,IAAT,KAAkB;AACxB,YAAMC,QAAQ,GAAGD,IAAI,CAACH,KAAL,CAAW,GAAX,CAAjB;AACAE,QAAAA,MAAM,CAACE,QAAQ,CAAC,CAAD,CAAT,CAAN,GAAsBA,QAAQ,CAAC,CAAD,CAA9B;AACA,eAAOF,MAAP;AACD,OAPc,EAOZ,EAPY,CAAjB,CAD0B,CAU1B;;AACAP,MAAAA,QAAQ,CAACC,QAAT,CAAkBC,IAAlB,GAAyB,EAAzB;AAEAJ,MAAAA,eAAe,CAACK,QAAD,CAAf;AACAO,MAAAA,MAAM,CAACC,YAAP,CAAoBC,OAApB,WACKC,iBADL,aAEEC,IAAI,CAACC,SAAL,CAAeZ,QAAf,CAFF;AAID;AACF,GApBD,EAoBG,EApBH,EAJuC,CA0BvC;;;AACAR,iBAAMI,SAAN,CAAgB,MAAM;AACpB,QAAMiB,SAAS,GAAGN,MAAM,CAACC,YAAP,CAAoBM,OAApB,WAA+BJ,iBAA/B,YAAlB;;AACA,QAAIG,SAAJ,EAAe;AACblB,MAAAA,eAAe,CAACgB,IAAI,CAACI,KAAL,CAAWF,SAAX,CAAD,CAAf;AACD;AACF,GALD,EAKG,EALH;;AAOA,MAAMG,UAAU,GAAG,MAAM;AACvB,iEAAsDC,qBAAtD,+CAAwGV,MAAM,CAACT,QAAP,CAAgBoB,IAAxH;AACD,GAFD;;AAIA,MAAMC,MAAM,GAAG,MAAM;AACnB,WAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtCf,MAAAA,MAAM,CAACC,YAAP,CAAoBe,UAApB,WAAkCb,iBAAlC;;AACA,UAAI,CAACH,MAAM,CAACC,YAAP,CAAoBM,OAApB,WAA+BJ,iBAA/B,YAAL,EAAwD;AACtDf,QAAAA,eAAe,CAAC,IAAD,CAAf;AACA0B,QAAAA,OAAO,CAAC,IAAD,CAAP;AACD;;AAEDC,MAAAA,MAAM,CAAC,IAAIE,KAAJ,CAAU,mBAAV,CAAD,CAAN;AACD,KARM,CAAP;AASD,GAVD;;AAYA,MAAMC,UAAU,GAAG,MAAM;AACvB,QAAMC,OAAO,GAAGhC,YAAY,GACxB;AAAEgC,MAAAA,OAAO,EAAE;AAAEC,QAAAA,aAAa,mBAAYjC,YAAY,CAACkC,YAAzB;AAAf;AAAX,KADwB,GAExB,IAFJ;AAIA,WAAOF,OAAP;AACD,GAND;;AAQA,SAAO;AAAEhC,IAAAA,YAAF;AAAgBsB,IAAAA,UAAhB;AAA4BS,IAAAA,UAA5B;AAAwCN,IAAAA;AAAxC,GAAP;AACD","sourcesContent":["import React from \"react\";\nimport { oauthClientId } from \"../config\";\nimport { namespace } from \"../config\";\n\nexport default function useNetlifyAuth() {\n  const [authResponse, setAuthResponse] = React.useState(null);\n\n  // Process our response from authorization\n  React.useEffect(() => {\n    if (document.location.hash) {\n      const response = document.location.hash\n        .replace(/^#/, \"\")\n        .split(\"&\")\n        .reduce((result, pair) => {\n          const keyValue = pair.split(\"=\");\n          result[keyValue[0]] = keyValue[1];\n          return result;\n        }, {});\n\n      // Remove the token so it's not visible in the URL after we're done\n      document.location.hash = \"\";\n\n      setAuthResponse(response);\n      window.localStorage.setItem(\n        `${namespace}--auth`,\n        JSON.stringify(response)\n      );\n    }\n  }, []);\n\n  // Set auth token from localStorage\n  React.useEffect(() => {\n    const authToken = window.localStorage.getItem(`${namespace}--auth`);\n    if (authToken) {\n      setAuthResponse(JSON.parse(authToken));\n    }\n  }, []);\n\n  const getAuthURL = () => {\n    return `https://app.netlify.com/authorize?client_id=${oauthClientId}&response_type=token&redirect_uri=${window.location.href}`;\n  };\n\n  const logout = () => {\n    return new Promise((resolve, reject) => {\n      window.localStorage.removeItem(`${namespace}--auth`);\n      if (!window.localStorage.getItem(`${namespace}--auth`)) {\n        setAuthResponse(null);\n        resolve(\"OK\");\n      }\n\n      reject(new Error(\"Unable to logout!\"));\n    });\n  };\n\n  const getHeaders = () => {\n    const headers = authResponse\n      ? { headers: { Authorization: `Bearer ${authResponse.access_token}` } }\n      : null;\n\n    return headers;\n  };\n\n  return { authResponse, getAuthURL, getHeaders, logout };\n}\n"],"file":"useNetlifyAuth.js"}